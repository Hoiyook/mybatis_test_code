<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<!-- 
1.使用DAO方式
namespace:命名空间就是一个文件的标识符,只有符合标识符的规则,可以随便写
2.使用Mapper方式
(1).namespace:必须是映射的接口全名
(2).操作的id必须和接口的方法名一一对应
 -->
<mapper namespace="cn.itheima.mapper.StudentMapper">

  <!-- 插入操作 -->
  <!-- 
   id:是操作的标识符,只有符合标识符的规则,可以随便写
   -->
  <insert id="insert">
    <!-- 
    mybatis支持通过实体对象传递参数,参数的使用#{}来获得,
    获得规则为:
    #{}里面的值,要和实体对象的set\get方法一一对应, 如: sname 对应实体类的setSname()和getSname
     -->
    INSERT INTO student	(SNAME, AGE, BIRTHDAY, SEX)	VALUES (#{sname}, #{age}, #{birthday}, #{sex})
  </insert>
  
  <!-- 删除 -->
  <delete id="deleteById">
    DELETE FROM student WHERE SID=#{sid}
  </delete>
  
  <!-- 更新 -->
  <update id="updateAllById">
   UPDATE student	SET	SNAME=#{sname},	AGE=#{age},	BIRTHDAY=#{birthday},SEX=#{sex}	WHERE  SID=#{sid}
  </update>
  
  <!-- 查询 -->

   <!-- 默认情况,Mybatis对于自定义的实体对象,必须使用类全名 ,但类的全名太长了,所以Mybatis支持使用一个别名来代替这个类全名-->
  <select resultType="Student" id="selectAll">
    SELECT *	FROM student
  </select>
  
  <select resultType="map" id="selectAllToMap">
    SELECT *	FROM student
  </select>
  
</mapper>
